{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Notes Need to Figure out for sure: Web Accessibility WCAG ASP.NET 4 Web Forms SQL Server Git Cloud Computing Java Spring Boot Shiny things: What problems it solves well What are the known challenges What/When it should not be used Microservices Serverless Single Page Applications Angular React","title":"Home"},{"location":"#notes","text":"","title":"Notes"},{"location":"#need-to-figure-out-for-sure","text":"Web Accessibility WCAG ASP.NET 4 Web Forms SQL Server Git Cloud Computing Java Spring Boot","title":"Need to Figure out for sure:"},{"location":"#shiny-things","text":"What problems it solves well What are the known challenges What/When it should not be used Microservices Serverless Single Page Applications Angular React","title":"Shiny things:"},{"location":"accessibility/tools/","text":"Tools Free Screen reader/TTS engine: https://www.nvaccess.org/ Best Practice: Turn off your screen and navigate using keyboard to all parts of your website Purpose: To identify places that users who are using assistive technology get stuck on Resources to help with using the tool: https://marcozehe.wordpress.com/articles/how-to-use-nvda-and-firefox-to-test-your-web-pages-for-accessibility/ How to use it for testing https://webaim.org/articles/nvda/ Using it to evaluate web accessibility https://webaim.org/resources/shortcuts/nvda Keyboard shortcuts for NVDA https://soap.stanford.edu/tips-and-tools/screen-reader-testing https://webaim.org/techniques/screenreader/ Info on screen reader testing in general HTML Validators: https://validator.w3.org/ Accesibility checker for public sites: https://achecker.ca/checker/index.php Focus Highlight: https://addons.nvda-project.org/addons/focusHighlight.en.html Ones that need review before adding to the list: https://t716.bitbucket.io/course-ref-en.html Google lighthouse https://www.youtube.com/watch?v=wkvslBGkhZY&t=1308s https://developers.google.com/web/tools/lighthouse/ Frameworks/Web Components: WET Toolkit https://wet-boew.github.io/wet-boew/docs/start-en.html Open source front-end framework for building websites that are accessible, usable, interoperable, mobile friendly and multilingual Has reusable components Chrome Specific: Accessibility Insights https://accessibilityinsights.io/en/ Has chrome extension that can be used to check for common accessibility issues Google Lighthouse Audit tool https://developers.google.com/web/tools/lighthouse/ Demo: https://www.youtube.com/watch?v=wkvslBGkhZY Color Contrast checker: WebIM Contrast Checker https://webaim.org/resources/contrastchecker/ to test using HEX values Alvaro Montoro Contrast Checker https://codepen.io/alvaromontoro/pen/YgpWZG to test using RGB values WEB Accessibility for Canada.ca https://t716.bitbucket.io/index-en.html Canadian School of Public Service https://github.com/CSPS-EFPC-DAAN/Design My Accessibility Testing Workflow and Thought Process https://dev.to/lkopacz/my-web-accessibility-testing-process-5b5h Fix 85% of your Web Accessibility issues in 5 easy steps https://dev.to/alvaromontoro/fix-85-of-your-web-accessibility-issues-in-5-easy-steps-pnf Text Links: Best Practices for Screen Readers https://www.deque.com/blog/text-links-practices-screen-readers/ The Web Accessibility Introduction I Wish I had https://dev.to/maxwell_dev/the-web-accessibility-introduction-i-wish-i-had-4ope Automated Source Code Accessibility Checker: https://github.com/marketplace/axe-linter","title":"Tools"},{"location":"accessibility/tools/#tools","text":"","title":"Tools"},{"location":"accessibility/tools/#free","text":"Screen reader/TTS engine: https://www.nvaccess.org/ Best Practice: Turn off your screen and navigate using keyboard to all parts of your website Purpose: To identify places that users who are using assistive technology get stuck on Resources to help with using the tool: https://marcozehe.wordpress.com/articles/how-to-use-nvda-and-firefox-to-test-your-web-pages-for-accessibility/ How to use it for testing https://webaim.org/articles/nvda/ Using it to evaluate web accessibility https://webaim.org/resources/shortcuts/nvda Keyboard shortcuts for NVDA https://soap.stanford.edu/tips-and-tools/screen-reader-testing https://webaim.org/techniques/screenreader/ Info on screen reader testing in general HTML Validators: https://validator.w3.org/ Accesibility checker for public sites: https://achecker.ca/checker/index.php Focus Highlight: https://addons.nvda-project.org/addons/focusHighlight.en.html","title":"Free"},{"location":"accessibility/tools/#ones-that-need-review-before-adding-to-the-list","text":"https://t716.bitbucket.io/course-ref-en.html Google lighthouse https://www.youtube.com/watch?v=wkvslBGkhZY&t=1308s https://developers.google.com/web/tools/lighthouse/ Frameworks/Web Components: WET Toolkit https://wet-boew.github.io/wet-boew/docs/start-en.html Open source front-end framework for building websites that are accessible, usable, interoperable, mobile friendly and multilingual Has reusable components Chrome Specific: Accessibility Insights https://accessibilityinsights.io/en/ Has chrome extension that can be used to check for common accessibility issues Google Lighthouse Audit tool https://developers.google.com/web/tools/lighthouse/ Demo: https://www.youtube.com/watch?v=wkvslBGkhZY Color Contrast checker: WebIM Contrast Checker https://webaim.org/resources/contrastchecker/ to test using HEX values Alvaro Montoro Contrast Checker https://codepen.io/alvaromontoro/pen/YgpWZG to test using RGB values WEB Accessibility for Canada.ca https://t716.bitbucket.io/index-en.html Canadian School of Public Service https://github.com/CSPS-EFPC-DAAN/Design My Accessibility Testing Workflow and Thought Process https://dev.to/lkopacz/my-web-accessibility-testing-process-5b5h Fix 85% of your Web Accessibility issues in 5 easy steps https://dev.to/alvaromontoro/fix-85-of-your-web-accessibility-issues-in-5-easy-steps-pnf Text Links: Best Practices for Screen Readers https://www.deque.com/blog/text-links-practices-screen-readers/ The Web Accessibility Introduction I Wish I had https://dev.to/maxwell_dev/the-web-accessibility-introduction-i-wish-i-had-4ope Automated Source Code Accessibility Checker: https://github.com/marketplace/axe-linter","title":"Ones that need review before adding to the list:"},{"location":"accessibility/wet/","text":"Web Experience Toolkit (WET) Q - I thought WET was a framework and CDTS was built on top of this. Or are they dif? ....Need to confirm...The below assumes they're dif. Templates and Themes Templates are for templating front end while the themes might be the same or different Both are built on top of Bootstrap WET Public facing sites: Canada.ca theme CDTS Public facing sites: Canada.ca theme WET CDTS: CDTS: Centrally Deployed Template Solutions CDTS uses Javascript to generate sections of your website based on the Common Look and Feel Standards Eg: Splash screen is a section of a page (can use WET but this ensures a consistent design. ) Repo:","title":"Web Experience Toolkit (WET)"},{"location":"accessibility/wet/#web-experience-toolkit-wet","text":"Q - I thought WET was a framework and CDTS was built on top of this. Or are they dif? ....Need to confirm...The below assumes they're dif.","title":"Web Experience Toolkit (WET)"},{"location":"accessibility/wet/#templates-and-themes","text":"Templates are for templating front end while the themes might be the same or different Both are built on top of Bootstrap WET Public facing sites: Canada.ca theme CDTS Public facing sites: Canada.ca theme","title":"Templates and Themes"},{"location":"accessibility/wet/#wet","text":"","title":"WET"},{"location":"accessibility/wet/#cdts","text":"CDTS: Centrally Deployed Template Solutions CDTS uses Javascript to generate sections of your website based on the Common Look and Feel Standards Eg: Splash screen is a section of a page (can use WET but this ensures a consistent design. ) Repo:","title":"CDTS:"},{"location":"asp.net/","text":"ASP.Net 4 Web Forms .NET Framework C# is the .NET framework language A software library with a runtime environment (for execution) Does memory management like java Use common language runtime (CLR) to execute code Tools: IDE: Visual Studio HelloWorld //main.cs using System; class MainClass { public static void Main (string[] args) { Console.WriteLine (\"Hello World\"); Console.ReadKey(); } } Solution A group of several projects (eg. Windows Forms app + Website) Namespaces Grouping of spaces that have something similar to each other Java equivalent: package names Methods Access Modifiers: private, public, protected, internal, protected internal accessModifier returnType methodName (returnType par1, returnType par2){} Static static methods can only access other static methods from within the same class accessModifier [optional static] returnType methodName (returnType par1, returnType par2){}","title":"ASP.Net 4 Web Forms"},{"location":"asp.net/#aspnet-4-web-forms","text":"","title":"ASP.Net 4 Web Forms"},{"location":"asp.net/#net-framework","text":"C# is the .NET framework language A software library with a runtime environment (for execution) Does memory management like java Use common language runtime (CLR) to execute code","title":".NET Framework"},{"location":"asp.net/#tools","text":"IDE: Visual Studio","title":"Tools:"},{"location":"asp.net/#helloworld","text":"//main.cs using System; class MainClass { public static void Main (string[] args) { Console.WriteLine (\"Hello World\"); Console.ReadKey(); } }","title":"HelloWorld"},{"location":"asp.net/#solution","text":"A group of several projects (eg. Windows Forms app + Website)","title":"Solution"},{"location":"asp.net/#namespaces","text":"Grouping of spaces that have something similar to each other Java equivalent: package names","title":"Namespaces"},{"location":"asp.net/#methods","text":"Access Modifiers: private, public, protected, internal, protected internal accessModifier returnType methodName (returnType par1, returnType par2){}","title":"Methods"},{"location":"asp.net/#static","text":"static methods can only access other static methods from within the same class accessModifier [optional static] returnType methodName (returnType par1, returnType par2){}","title":"Static"}]}